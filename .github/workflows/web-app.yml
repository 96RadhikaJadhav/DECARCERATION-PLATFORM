# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Web App Node.js CI/CD

on:
  push:
    branches: [master]
    paths:
      - "web-app/**"
  pull_request:
    branches: [master]
    paths:
      - "web-app/**"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x] # 10.x, 12.x,

    steps:
      - uses: actions/checkout@v2

      - name: use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: |
          sed -Ei 's/FIREBASE_APP_ID/$ENV{FIREBASE_APP_ID}/' web-app/src/config.js
          sed -Ei 's/FIREBASE_API_KEY/$ENV{FIREBASE_API_KEY}/' web-app/src/config.js
          sed -Ei 's/FIREBASE_AUTH_DOMAIN/$ENV{FIREBASE_AUTH_DOMAIN}/' web-app/src/config.js
          sed -Ei 's/FIREBASE_DB_URL/$ENV{FIREBASE_DB_URL}/' web-app/src/config.js
          sed -Ei 's/FIREBASE_MESSAGING_SENDER_ID/$ENV{FIREBASE_MESSAGING_SENDER_ID}/' web-app/src/config.js
          sed -Ei 's/FIREBASE_PROJECT_ID/$ENV{FIREBASE_PROJECT_ID}/' web-app/src/config.js
          sed -Ei 's/FIREBASE_STORAGE_BUCKET/$ENV{FIREBASE_STORAGE_BUCKET}/' web-app/src/config.js
          sed -Ei 's/MEASUREMENT_ID/$ENV{MEASUREMENT_ID}/' web-app/src/config.js
          sed -Ei 's/REACT_APP_GOOGLE_MAPS_API_KEY/$ENV{REACT_APP_GOOGLE_MAPS_API_KEY}/' web-app/src/config.js
        env:
          CI: false
          AWS_APP_ID: ${{ secrets.AWS_APP_ID }}
          AWS_BACKEND_ENV_NAME: ${{ secrets.AWS_BACKEND_ENV_NAME }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DB_URL: ${{ secrets.FIREBASE_DB_URL }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          MEASUREMENT_ID: ${{ secrets.MEASUREMENT_ID }}
          REACT_APP_GOOGLE_MAPS_API_KEY: ${{ secrets.REACT_APP_GOOGLE_MAPS_API_KEY }}
          #AWSCLOUDFORMATIONCONFIG: "{\"configLevel\":\"project\",\"useProfile\":true,\"profileName\":\"default\"}"
          #NOTIFICATIONSCONFIG: "{\"Pinpoint\":{\"SMS\":{\"Enabled\":true},\"Email\":{\"Enabled\":true,\"FromAddress\":\"xxx@amzon.com\",\"Identity\":\"identityArn\",\"RoleArn\":\"roleArn\"}, \"APNS\":{\"Enabled\":true,\"DefaultAuthenticationMethod\":\"Certificate\",\"P12FilePath\":\"p12filePath\",\"Password\":\"p12FilePasswordIfAny\"},\"FCM\":{\"Enabled\":true,\"ApiKey\":\"fcmapikey\"}}}"
          #AMPLIFY: "{\"appId\":\"$AWS_APP_ID\", \"envName\":\"$AWS_BACKEND_ENV_NAME\"}"
          #PROVIDERS: "{\"awscloudformation\":$AWSCLOUDFORMATIONCONFIG}"
          #CATEGORIES: "{\"notifications\":$NOTIFICATIONSCONFIG}"

      #- name: configure amplify
      #  uses: ambientlight/amplify-cli-action@0.2.1
      #  with:
      #    amplify_command: configure
      #    amplify_env: master
      #  env:
      #    AWS_ACCESS_KEY_ID: ${{ secrets.SERVICE_PROVIDER_READ_ACCESS_KEY_ID }}
      #    AWS_SECRET_ACCESS_KEY: ${{ secrets.SERVICE_PROVIDER_READ_SECRET_ACCESS_KEY }}
      #    AWS_REGION: us-east-1

      - name: install, build and test
        run: |
          npm install
          npm test
          npm run build --if-present
        env:
          CI: false
        working-directory: web-app

      - name: deploy
        uses: ambientlight/amplify-cli-action@0.2.1
        with:
          amplify_command: publish
          amplify_env: prod
        env:
          CI: false
          AWS_ACCESS_KEY_ID: ${{ secrets.SERVICE_PROVIDER_READ_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SERVICE_PROVIDER_READ_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DB_URL: ${{ secrets.FIREBASE_DB_URL }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          MEASUREMENT_ID: ${{ secrets.MEASUREMENT_ID }}
          REACT_APP_GOOGLE_MAPS_API_KEY: ${{ secrets.REACT_APP_GOOGLE_MAPS_API_KEY }}
    #- run: amplify init --appId "$AWS_APP_ID" --envName "$AWS_BACKEND_ENV_NAME" --yes
    #- run: amplify init --amplify $AMPLIFY --providers $PROVIDERS -categories $CATEGORIES --yes
    #- run: npm ci
    #  working-directory: web-app
    #- run: npm run build --if-present
    #  working-directory: web-app
    #- run: npm test
    #  working-directory: web-app
